{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u7cfb\u7edf\u73af\u5883 \u00b6 \u865a\u62df\u673a\uff1aVMware 16.x \u64cd\u4f5c\u7cfb\u7edf\uff1aubuntu 18.04 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff1amelodic \u865a\u62df\u673a \u00b6 \u5b89\u88c5 \u00b6 \u6ce8\u518c\u7801\u7f51\u4e0a\u641c \u64cd\u4f5c\u7cfb\u7edf \u00b6 \u5b89\u88c5 \u00b6 \u6362\u6e90 \u00b6 \u6253\u5f00\u7c7b\u4f3c \u8f6f\u4ef6\u548c\u66f4\u65b0 \u7684\u5e94\u7528\uff0c\u9009\u62e9\u56fd\u5185\u6e90 \u5b89\u88c5\u589e\u5f3a\u5de5\u5177(\u865a\u62df\u673a) \u00b6 sudo apt install -y open-vm-tools open-vm-tools-desktop \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf \u00b6 \u914d\u7f6eUbuntu\u8f6f\u4ef6\u4ed3\u5e93 \u00b6 \u914d\u7f6e\u4f60\u7684Ubuntu\u8f6f\u4ef6\u4ed3\u5e93\uff08repositories\uff09\u4ee5\u5141\u8bb8\u4f7f\u7528\u201crestricted\u201d\u201cuniverse\u201d\u548c\u201cmultiverse\u201d\u5b58\u50a8\u5e93\u3002\u4f60\u53ef\u4ee5\u6839\u636eUbuntu\u8f6f\u4ef6\u4ed3\u5e93\u6307\u5357\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002 \u8bbe\u7f6esources.list \u00b6 sudo sh -c '. /etc/lsb-release && echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros-latest.list' \u8bbe\u7f6e\u5bc6\u94a5 \u00b6 sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 \u5b89\u88c5 \u00b6 \u9996\u5148\u66f4\u65b0\u8f6f\u4ef6\u6e90 sudo apt update \u7136\u540e\u6839\u636e\u9700\u6c42\u5b89\u88c5\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf \u684c\u9762\u5b8c\u6574\u7248\uff08\u63a8\u8350\uff09\uff1a : \u5305\u542b ROS\u3001rqt\u3001rviz\u3001\u673a\u5668\u4eba\u901a\u7528\u5e93\u30012D/3D \u6a21\u62df\u5668\u3001\u5bfc\u822a\u4ee5\u53ca 2D/3D \u611f\u77e5\u5305\u3002 sudo apt install ros-melodic-desktop-full \u684c\u9762\u7248\uff1a \u5305\u542b ROS\uff0crqt\uff0crviz \u548c\u673a\u5668\u4eba\u901a\u7528\u5e93 sudo apt install ros-melodic-desktop ROS-\u57fa\u7840\u5305\uff1a \u5305\u542b ROS \u5305\uff0c\u6784\u5efa\u548c\u901a\u4fe1\u5e93\u3002\u6ca1\u6709\u56fe\u5f62\u754c\u9762\u5de5\u5177\u3002 sudo apt install ros-melodic-ros-base \u5355\u72ec\u7684\u5305\uff1a \u4f60\u4e5f\u53ef\u4ee5\u5b89\u88c5\u67d0\u4e2a\u6307\u5b9a\u7684ROS\u8f6f\u4ef6\u5305\uff08\u4f7f\u7528\u8f6f\u4ef6\u5305\u540d\u79f0\u66ff\u6362\u6389\u4e0b\u9762\u7684PACKAGE\uff09\uff1a sudo apt install ros-melodic-PACKAGE \u521d\u59cb\u5316 rosdep \u00b6 \u5b89\u88c5\u56fd\u5185\u7248 rosdep sudo apt install -y python3-pip pip3 install rosdepc -i https://pypi.mirrors.ustc.edu.cn/simple \u6267\u884c\u521d\u59cb\u5316 sudo rosdepc init rosdepc update \u8bbe\u7f6e\u73af\u5883 \u00b6 bash echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc zsh echo \"source /opt/ros/melodic/setup.zsh\" >> ~/.zshrc source ~/.zshrc \u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56 \u00b6 sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential","title":"\u4ecb\u7ecd"},{"location":"#_1","text":"\u865a\u62df\u673a\uff1aVMware 16.x \u64cd\u4f5c\u7cfb\u7edf\uff1aubuntu 18.04 \u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf\uff1amelodic","title":"\u7cfb\u7edf\u73af\u5883"},{"location":"#_2","text":"","title":"\u865a\u62df\u673a"},{"location":"#_3","text":"\u6ce8\u518c\u7801\u7f51\u4e0a\u641c","title":"\u5b89\u88c5"},{"location":"#_4","text":"","title":"\u64cd\u4f5c\u7cfb\u7edf"},{"location":"#_5","text":"","title":"\u5b89\u88c5"},{"location":"#_6","text":"\u6253\u5f00\u7c7b\u4f3c \u8f6f\u4ef6\u548c\u66f4\u65b0 \u7684\u5e94\u7528\uff0c\u9009\u62e9\u56fd\u5185\u6e90","title":"\u6362\u6e90"},{"location":"#_7","text":"sudo apt install -y open-vm-tools open-vm-tools-desktop","title":"\u5b89\u88c5\u589e\u5f3a\u5de5\u5177(\u865a\u62df\u673a)"},{"location":"#_8","text":"","title":"\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf"},{"location":"#ubuntu","text":"\u914d\u7f6e\u4f60\u7684Ubuntu\u8f6f\u4ef6\u4ed3\u5e93\uff08repositories\uff09\u4ee5\u5141\u8bb8\u4f7f\u7528\u201crestricted\u201d\u201cuniverse\u201d\u548c\u201cmultiverse\u201d\u5b58\u50a8\u5e93\u3002\u4f60\u53ef\u4ee5\u6839\u636eUbuntu\u8f6f\u4ef6\u4ed3\u5e93\u6307\u5357\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002","title":"\u914d\u7f6eUbuntu\u8f6f\u4ef6\u4ed3\u5e93"},{"location":"#sourceslist","text":"sudo sh -c '. /etc/lsb-release && echo \"deb http://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ `lsb_release -cs` main\" > /etc/apt/sources.list.d/ros-latest.list'","title":"\u8bbe\u7f6esources.list"},{"location":"#_9","text":"sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654","title":"\u8bbe\u7f6e\u5bc6\u94a5"},{"location":"#_10","text":"\u9996\u5148\u66f4\u65b0\u8f6f\u4ef6\u6e90 sudo apt update \u7136\u540e\u6839\u636e\u9700\u6c42\u5b89\u88c5\u673a\u5668\u4eba\u64cd\u4f5c\u7cfb\u7edf \u684c\u9762\u5b8c\u6574\u7248\uff08\u63a8\u8350\uff09\uff1a : \u5305\u542b ROS\u3001rqt\u3001rviz\u3001\u673a\u5668\u4eba\u901a\u7528\u5e93\u30012D/3D \u6a21\u62df\u5668\u3001\u5bfc\u822a\u4ee5\u53ca 2D/3D \u611f\u77e5\u5305\u3002 sudo apt install ros-melodic-desktop-full \u684c\u9762\u7248\uff1a \u5305\u542b ROS\uff0crqt\uff0crviz \u548c\u673a\u5668\u4eba\u901a\u7528\u5e93 sudo apt install ros-melodic-desktop ROS-\u57fa\u7840\u5305\uff1a \u5305\u542b ROS \u5305\uff0c\u6784\u5efa\u548c\u901a\u4fe1\u5e93\u3002\u6ca1\u6709\u56fe\u5f62\u754c\u9762\u5de5\u5177\u3002 sudo apt install ros-melodic-ros-base \u5355\u72ec\u7684\u5305\uff1a \u4f60\u4e5f\u53ef\u4ee5\u5b89\u88c5\u67d0\u4e2a\u6307\u5b9a\u7684ROS\u8f6f\u4ef6\u5305\uff08\u4f7f\u7528\u8f6f\u4ef6\u5305\u540d\u79f0\u66ff\u6362\u6389\u4e0b\u9762\u7684PACKAGE\uff09\uff1a sudo apt install ros-melodic-PACKAGE","title":"\u5b89\u88c5"},{"location":"#rosdep","text":"\u5b89\u88c5\u56fd\u5185\u7248 rosdep sudo apt install -y python3-pip pip3 install rosdepc -i https://pypi.mirrors.ustc.edu.cn/simple \u6267\u884c\u521d\u59cb\u5316 sudo rosdepc init rosdepc update","title":"\u521d\u59cb\u5316 rosdep"},{"location":"#_11","text":"bash echo \"source /opt/ros/melodic/setup.bash\" >> ~/.bashrc source ~/.bashrc zsh echo \"source /opt/ros/melodic/setup.zsh\" >> ~/.zshrc source ~/.zshrc","title":"\u8bbe\u7f6e\u73af\u5883"},{"location":"#_12","text":"sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential","title":"\u5b89\u88c5\u5f00\u53d1\u4f9d\u8d56"},{"location":"lab1/","text":"\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5c0f\u4e4c\u9f9f\u8fd0\u52a8\u5b9e\u9a8c\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe \u00b6 \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u542f\u52a8\u4e3b\u8282\u70b9 roscore \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u542f\u52a8 turtlesim \u8282\u70b9 rosrun turtlesim turtlesim_node \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u8fd0\u884c\u6309\u952e\u63a7\u5236 rosrun turtlesim turtle_teleop_key \u901a\u8fc7 rostopic pub \u547d\u4ee4\u63a7\u5236\u5c0f\u4e4c\u9f9f\u8fd0\u52a8\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe \u00b6 \u5217\u51fa\u6240\u6709\u53d1\u5e03(Published)\u548c\u8ba2\u9605(Subscribed)\u7684\u4e3b\u9898\u53ca\u5176\u7c7b\u578b\u7684\u8be6\u7ec6\u4fe1\u606f rostopic list -v \u5c06\u5f97\u5230\u4ee5\u4e0b\u4fe1\u606f Published topics: * /turtle1/color_sensor [turtlesim/Color] 1 publisher * /rosout [rosgraph_msgs/Log] 1 publisher * /rosout_agg [rosgraph_msgs/Log] 1 publisher * /turtle1/pose [turtlesim/Pose] 1 publisher Subscribed topics: * /turtle1/cmd_vel [geometry_msgs/Twist] 1 subscriber * /rosout [rosgraph_msgs/Log] 1 subscribe \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5 * \u8bdd\u9898\u540d\u79f0 [\u6d88\u606f\u7c7b\u578b] \u53d1\u5e03\u6216\u8ba2\u9605\u8005\u7684\u6570\u91cf \u4f7f\u7528 rosmsg \u67e5\u770b\u6d88\u606f\u7684\u8be6\u7ec6\u4fe1\u606f rosmsg show geometry_msgs/Twist \u5c06\u5f97\u5230\u4ee5\u4e0b\u4fe1\u606f geometry_msgs/Vector3 linear float64 x float64 y float64 z geometry_msgs/Vector3 angular float64 x float64 y float64 z \u6211\u4eec\u9700\u8981\u4f20\u9012\u4e09\u4e2a\u7ebf\u901f\u5ea6\u548c\u4e09\u4e2a\u89d2\u901f\u5ea6 rostopic pub -1 /turtle1/cmd_vel geometry_msgs/Twist -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]' \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u53d1\u9001\u4e00\u6761\u6d88\u606f\u7ed9 turtlesim \uff0c\u544a\u8bc9\u5b83\u4ee5 2.0 \u5927\u5c0f\u7684\u7ebf\u901f\u5ea6\u548c 1.8 \u5927\u5c0f\u7684\u89d2\u901f\u5ea6\u79fb\u52a8\u3002 \u8fd9\u6761\u547d\u4ee4\u5c06\u6d88\u606f\u53d1\u5e03\u5230\u6307\u5b9a\u7684\u8bdd\u9898\uff1a rostopic pub \u8fd9\u4e00\u9009\u9879\u4f1a\u8ba9rostopic\u53ea\u53d1\u5e03\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u9000\u51fa\uff1a -1 \u8fd9\u662f\u8981\u53d1\u5e03\u5230\u7684\u8bdd\u9898\u7684\u540d\u79f0\uff1a /turtle1/cmd_vel \u8fd9\u662f\u53d1\u5e03\u5230\u8bdd\u9898\u65f6\u8981\u4f7f\u7528\u7684\u6d88\u606f\u7684\u7c7b\u578b\uff1a geometry_msgs/Twist \u8fd9\u4e00\u9009\u9879\uff08\u4e24\u4e2a\u7834\u6298\u53f7\uff09\u7528\u6765\u544a\u8bc9\u9009\u9879\u89e3\u6790\u5668\uff0c\u8868\u660e\u4e4b\u540e\u7684\u53c2\u6570\u90fd\u4e0d\u662f\u9009\u9879\u3002\u5982\u679c\u53c2\u6570\u524d\u6709\u7834\u6298\u53f7\uff08-\uff09\u6bd4\u5982\u8d1f\u6570\uff0c\u90a3\u4e48\u8fd9\u662f\u5fc5\u9700\u7684\u3002 -- \u5982\u524d\u6240\u8ff0\uff0c\u4e00\u4e2aturtlesim/Velocity\u6d88\u606f\u6709\u4e24\u4e2a\u6d6e\u70b9\u578b\u5143\u7d20\uff1alinear\u548cangular\u3002\u5728\u672c\u4f8b\u4e2d\uff0c'[2.0, 0.0, 0.0]'\u8868\u793alinear\u7684\u503c\u4e3ax=2.0, y=0.0, z=0.0\uff0c\u800c'[0.0, 0.0, 1.8]'\u662f\u8bf4angular\u7684\u503c\u4e3ax=0.0, y=0.0, z=1.8\u3002\u8fd9\u4e9b\u53c2\u6570\u5b9e\u9645\u4e0a\u4f7f\u7528\u7684\u662f YAML \u8bed\u6cd5\uff0c\u5728YAML\u547d\u4ee4\u884c\u6587\u6863\u4e2d\u6709\u63cf\u8ff0\u3002 '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]' rostopic pub /turtle1/cmd_vel geometry_msgs/Twist -r 1 -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, -1.8]' \u8fd9\u5c06\u4ee51 Hz\u7684\u901f\u5ea6\u53d1\u5e03velocity\u6307\u4ee4\u5230velocity\u8bdd\u9898\u4e0a\u3002 \u753b\u4e00\u4e2a\u6b63\u65b9\u5f62 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0 \u901a\u8fc7\u952e\u76d8\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u5b9e\u9a8c\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe \u00b6 \u79fb\u52a8\u673a\u5668\u4eba\u7684NUC\u63a7\u5236\u5668\u63d2\u4e0a\u663e\u793a\u5c4f\u548c\u952e\u76d8\u9f20\u6807\uff0c\u5f00\u673a\u540e\u8fde\u63a5\u8def\u7531\u5668wifi\u6216\u624b\u673a\u70ed\u70b9\uff1b \u901a\u8fc7 ifconfig \u6216\u8005 ip addr \u547d\u4ee4\uff0c\u67e5\u770b\u5f53\u524d\u63a7\u5236\u5668\u7684IP\u5730\u5740 \u4fdd\u6301\u673a\u5668\u4eba\u5f00\u673a\u72b6\u6001\uff0c\u62c6\u9664\u663e\u793a\u5c4f\u548c\u952e\u9f20\u3002\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u4e0d\u8981\u5173\u95edwifi\u70ed\u70b9\uff0c\u4fdd\u6301\u7f51\u7edc\u987a\u7545\u3002 \u5728\u81ea\u5df1\u7535\u8111\u4e0a\u901a\u8fc7\u547d\u4ee4 ssh omove@ $ip \u8fdc\u7a0b\u767b\u5f55\u5230\u63a7\u5236\u5668\uff0c $ip \u6307\u7b2c2\u6b65\u67e5\u8be2\u7684IP\u5730\u5740\uff0c\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u8f93\u5165\u5bc6\u7801 1 \uff0c\u56de\u8f66\u786e\u8ba4\u3002 \u5728\u63a7\u5236\u5668\u4e2d\uff0c\u542f\u52a8 omove_driver \u529f\u80fd\u5305\u4e2d\u7684 omove_driver.launch \u6587\u4ef6\u3002 roslaunch omove_driver omove_driver.launch \u5728\u63a7\u5236\u5668\u4e2d\uff0c\u542f\u52a8\u952e\u76d8\u63a7\u5236\u8282\u70b9 teleop_twist_keyboard \u901a\u8fc7\u952e\u76d8\u6309\u952e\u63a7\u5236\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u3002 rosrun teleop_twist_keyboard teleop_twist_keyboard.py \u901a\u8fc7 rostopic pub \u547d\u4ee4\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe \u00b6 \u901a\u8fc7 rostopic pub \u547d\u4ee4\u7684\u65b9\u5f0f\u63a7\u5236\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u3002","title":"\u5b9e\u9a8c\u4e00"},{"location":"lab1/#_1","text":"\u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u542f\u52a8\u4e3b\u8282\u70b9 roscore \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u542f\u52a8 turtlesim \u8282\u70b9 rosrun turtlesim turtlesim_node \u6253\u5f00\u4e00\u4e2a\u65b0\u7ec8\u7aef\uff0c\u8fd0\u884c\u6309\u952e\u63a7\u5236 rosrun turtlesim turtle_teleop_key","title":"\u901a\u8fc7\u952e\u76d8\u63a7\u5236\u5c0f\u4e4c\u9f9f\u8fd0\u52a8\u5b9e\u9a8c\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe"},{"location":"lab1/#rostopic-pub","text":"\u5217\u51fa\u6240\u6709\u53d1\u5e03(Published)\u548c\u8ba2\u9605(Subscribed)\u7684\u4e3b\u9898\u53ca\u5176\u7c7b\u578b\u7684\u8be6\u7ec6\u4fe1\u606f rostopic list -v \u5c06\u5f97\u5230\u4ee5\u4e0b\u4fe1\u606f Published topics: * /turtle1/color_sensor [turtlesim/Color] 1 publisher * /rosout [rosgraph_msgs/Log] 1 publisher * /rosout_agg [rosgraph_msgs/Log] 1 publisher * /turtle1/pose [turtlesim/Pose] 1 publisher Subscribed topics: * /turtle1/cmd_vel [geometry_msgs/Twist] 1 subscriber * /rosout [rosgraph_msgs/Log] 1 subscribe \u6211\u4eec\u53ef\u4ee5\u5f97\u77e5 * \u8bdd\u9898\u540d\u79f0 [\u6d88\u606f\u7c7b\u578b] \u53d1\u5e03\u6216\u8ba2\u9605\u8005\u7684\u6570\u91cf \u4f7f\u7528 rosmsg \u67e5\u770b\u6d88\u606f\u7684\u8be6\u7ec6\u4fe1\u606f rosmsg show geometry_msgs/Twist \u5c06\u5f97\u5230\u4ee5\u4e0b\u4fe1\u606f geometry_msgs/Vector3 linear float64 x float64 y float64 z geometry_msgs/Vector3 angular float64 x float64 y float64 z \u6211\u4eec\u9700\u8981\u4f20\u9012\u4e09\u4e2a\u7ebf\u901f\u5ea6\u548c\u4e09\u4e2a\u89d2\u901f\u5ea6 rostopic pub -1 /turtle1/cmd_vel geometry_msgs/Twist -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]' \u4ee5\u4e0a\u547d\u4ee4\u4f1a\u53d1\u9001\u4e00\u6761\u6d88\u606f\u7ed9 turtlesim \uff0c\u544a\u8bc9\u5b83\u4ee5 2.0 \u5927\u5c0f\u7684\u7ebf\u901f\u5ea6\u548c 1.8 \u5927\u5c0f\u7684\u89d2\u901f\u5ea6\u79fb\u52a8\u3002 \u8fd9\u6761\u547d\u4ee4\u5c06\u6d88\u606f\u53d1\u5e03\u5230\u6307\u5b9a\u7684\u8bdd\u9898\uff1a rostopic pub \u8fd9\u4e00\u9009\u9879\u4f1a\u8ba9rostopic\u53ea\u53d1\u5e03\u4e00\u6761\u6d88\u606f\uff0c\u7136\u540e\u9000\u51fa\uff1a -1 \u8fd9\u662f\u8981\u53d1\u5e03\u5230\u7684\u8bdd\u9898\u7684\u540d\u79f0\uff1a /turtle1/cmd_vel \u8fd9\u662f\u53d1\u5e03\u5230\u8bdd\u9898\u65f6\u8981\u4f7f\u7528\u7684\u6d88\u606f\u7684\u7c7b\u578b\uff1a geometry_msgs/Twist \u8fd9\u4e00\u9009\u9879\uff08\u4e24\u4e2a\u7834\u6298\u53f7\uff09\u7528\u6765\u544a\u8bc9\u9009\u9879\u89e3\u6790\u5668\uff0c\u8868\u660e\u4e4b\u540e\u7684\u53c2\u6570\u90fd\u4e0d\u662f\u9009\u9879\u3002\u5982\u679c\u53c2\u6570\u524d\u6709\u7834\u6298\u53f7\uff08-\uff09\u6bd4\u5982\u8d1f\u6570\uff0c\u90a3\u4e48\u8fd9\u662f\u5fc5\u9700\u7684\u3002 -- \u5982\u524d\u6240\u8ff0\uff0c\u4e00\u4e2aturtlesim/Velocity\u6d88\u606f\u6709\u4e24\u4e2a\u6d6e\u70b9\u578b\u5143\u7d20\uff1alinear\u548cangular\u3002\u5728\u672c\u4f8b\u4e2d\uff0c'[2.0, 0.0, 0.0]'\u8868\u793alinear\u7684\u503c\u4e3ax=2.0, y=0.0, z=0.0\uff0c\u800c'[0.0, 0.0, 1.8]'\u662f\u8bf4angular\u7684\u503c\u4e3ax=0.0, y=0.0, z=1.8\u3002\u8fd9\u4e9b\u53c2\u6570\u5b9e\u9645\u4e0a\u4f7f\u7528\u7684\u662f YAML \u8bed\u6cd5\uff0c\u5728YAML\u547d\u4ee4\u884c\u6587\u6863\u4e2d\u6709\u63cf\u8ff0\u3002 '[2.0, 0.0, 0.0]' '[0.0, 0.0, 1.8]' rostopic pub /turtle1/cmd_vel geometry_msgs/Twist -r 1 -- '[2.0, 0.0, 0.0]' '[0.0, 0.0, -1.8]' \u8fd9\u5c06\u4ee51 Hz\u7684\u901f\u5ea6\u53d1\u5e03velocity\u6307\u4ee4\u5230velocity\u8bdd\u9898\u4e0a\u3002 \u753b\u4e00\u4e2a\u6b63\u65b9\u5f62 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0 rosservice call turtle1/teleport_relative -- 0 1 .57075 rosservice call turtle1/teleport_relative -- 2 0","title":"\u901a\u8fc7rostopic pub\u547d\u4ee4\u63a7\u5236\u5c0f\u4e4c\u9f9f\u8fd0\u52a8\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe"},{"location":"lab1/#omove","text":"\u79fb\u52a8\u673a\u5668\u4eba\u7684NUC\u63a7\u5236\u5668\u63d2\u4e0a\u663e\u793a\u5c4f\u548c\u952e\u76d8\u9f20\u6807\uff0c\u5f00\u673a\u540e\u8fde\u63a5\u8def\u7531\u5668wifi\u6216\u624b\u673a\u70ed\u70b9\uff1b \u901a\u8fc7 ifconfig \u6216\u8005 ip addr \u547d\u4ee4\uff0c\u67e5\u770b\u5f53\u524d\u63a7\u5236\u5668\u7684IP\u5730\u5740 \u4fdd\u6301\u673a\u5668\u4eba\u5f00\u673a\u72b6\u6001\uff0c\u62c6\u9664\u663e\u793a\u5c4f\u548c\u952e\u9f20\u3002\u5b9e\u9a8c\u8fc7\u7a0b\u4e2d\u4e0d\u8981\u5173\u95edwifi\u70ed\u70b9\uff0c\u4fdd\u6301\u7f51\u7edc\u987a\u7545\u3002 \u5728\u81ea\u5df1\u7535\u8111\u4e0a\u901a\u8fc7\u547d\u4ee4 ssh omove@ $ip \u8fdc\u7a0b\u767b\u5f55\u5230\u63a7\u5236\u5668\uff0c $ip \u6307\u7b2c2\u6b65\u67e5\u8be2\u7684IP\u5730\u5740\uff0c\u63d0\u793a\u8f93\u5165\u5bc6\u7801\uff0c\u8f93\u5165\u5bc6\u7801 1 \uff0c\u56de\u8f66\u786e\u8ba4\u3002 \u5728\u63a7\u5236\u5668\u4e2d\uff0c\u542f\u52a8 omove_driver \u529f\u80fd\u5305\u4e2d\u7684 omove_driver.launch \u6587\u4ef6\u3002 roslaunch omove_driver omove_driver.launch \u5728\u63a7\u5236\u5668\u4e2d\uff0c\u542f\u52a8\u952e\u76d8\u63a7\u5236\u8282\u70b9 teleop_twist_keyboard \u901a\u8fc7\u952e\u76d8\u6309\u952e\u63a7\u5236\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u3002 rosrun teleop_twist_keyboard teleop_twist_keyboard.py","title":"\u901a\u8fc7\u952e\u76d8\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u5b9e\u9a8c\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe"},{"location":"lab1/#rostopic-pubomove","text":"\u901a\u8fc7 rostopic pub \u547d\u4ee4\u7684\u65b9\u5f0f\u63a7\u5236\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u3002","title":"\u901a\u8fc7rostopic pub\u547d\u4ee4\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u8fd0\u52a8\u8fc7\u7a0b\u4e0e\u7ed3\u679c\u622a\u56fe"},{"location":"lab2/","text":"ROS\u5de5\u4f5c\u7a7a\u95f4\u4e0e\u73af\u5883\u7ba1\u7406 \u00b6 mkdir -p ~/catkin_ws/src #\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4catkin_ws\u548c\u5b50\u76ee\u5f55src\uff0c\u81ea\u5b9a\u4e49\u7a7a\u95f4\u540d cd ~/catkin_ws #\u8fdb\u5165\u5230\u5de5\u4f5c\u7a7a\u95f4catkin_ws catkin_make #\u7f16\u8bd1\u5de5\u4f5c\u7a7a\u95f4catkin_ws ROS\u7a0b\u5e8f\u5305\u521b\u5efa \u00b6 cd ~/catkin_ws/src #\u8fdb\u5165\u7a0b\u5e8f\u5305\u76ee\u5f55 catkin_create_pkg lab std_msgs rospy roscpp #\u521b\u5efa\u7a0b\u5e8f\u5305lab cd lab #\u8fdb\u5165\u7a0b\u5e8f\u5305lab ROS\u7f16\u7a0b\u8bdd\u9898\u53d1\u5e03\u4e0e\u8ba2\u9605\u7684\u4ee3\u7801\u548c\u5206\u6790 \u00b6 mkdir scripts touch scripts/talker.py scripts/listener.py # \u521b\u5efa\u7a7a\u767d\u6587\u4ef6 chmod +x scripts/talker.py scripts/listener.py # \u6dfb\u52a0\u6267\u884c\u6743\u9650 \u7f16\u8f91 scripts/talker.py gedit scripts/talker.py scripts/talker.py #!/usr/bin/env python # license removed for brevity import rospy from std_msgs.msg import String def talker (): pub = rospy . Publisher ( 'chatter' , String , queue_size = 10 ) rospy . init_node ( 'talker' , anonymous = True ) rate = rospy . Rate ( 10 ) # 10hz while not rospy . is_shutdown (): hello_str = \"hello world %s \" % rospy . get_time () rospy . loginfo ( hello_str ) pub . publish ( hello_str ) rate . sleep () if __name__ == '__main__' : try : talker () except rospy . ROSInterruptException : pass \u7f16\u8f91 scripts/listener.py gedit scripts/listener.py scripts/listener.py #!/usr/bin/env python import rospy from std_msgs.msg import String def callback ( data ): rospy . loginfo ( rospy . get_caller_id () + \"I heard %s \" , data . data ) def listener (): # In ROS, nodes are uniquely named. If two nodes with the same # name are launched, the previous one is kicked off. The # anonymous=True flag means that rospy will choose a unique # name for our 'listener' node so that multiple listeners can # run simultaneously. rospy . init_node ( 'listener' , anonymous = True ) rospy . Subscriber ( \"chatter\" , String , callback ) # spin() simply keeps python from exiting until this node is stopped rospy . spin () if __name__ == '__main__' : listener () \u7f16\u8f91 CMakeLists.txt gedit CMakeLists.txt \u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 CMakeLists.txt catkin_install_python ( PROGRAMS scripts/talker.py scripts/listener.py DESTINATION ${ CATKIN_PACKAGE_BIN_DESTINATION } ) \u7f16\u8bd1\u5de5\u7a0b cd ~/catkin_ws catkin_make \u52a0\u8f7d\u73af\u5883 source devel/setup.bash \u8fd0\u884c\u4e3b\u8282\u70b9 roscore \u8fd0\u884c\u8ba2\u9605\u8005 cd ~/catkin_ws source devel/setup.bash rosrun lab listener.py \u8fd0\u884c\u53d1\u5e03\u8005 cd ~/catkin_ws source devel/setup.bash rosrun lab talker.py \u7f16\u7a0b\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u81ea\u4e3b\u8fd0\u52a8 \u00b6 touch scripts/run.py chmod +x scripts/run.py scripts/run.py #!/usr/bin/env python # -*- coding: utf-8 -*- import rospy from geometry_msgs.msg import Twist def run (): pub = rospy . Publisher ( 'cmd_vel' , Twist , queue_size = 10 ) rospy . init_node ( 'run' , anonymous = True ) rate = rospy . Rate ( 10 ) # 10hz count = 0 while not rospy . is_shutdown (): twist = Twist () if 0 == count : rospy . loginfo ( \"\u524d\u8fdb\" ) elif 20 == count : rospy . loginfo ( \"\u5de6\u79fb\" ) elif 40 == count : rospy . loginfo ( \"\u540e\u9000\" ) elif 60 == count : rospy . loginfo ( \"\u53f3\u79fb\" ) if count <= 20 : twist . linear . x = 1 elif 20 < count and count <= 40 : twist . linear . y = 1 elif 40 < count and count <= 60 : twist . linear . x = - 1 elif 60 < count and count <= 80 : twist . linear . y = - 1 else : count = - 1 pub . publish ( twist ) rate . sleep () count += 1 if __name__ == '__main__' : try : run () except rospy . ROSInterruptException : pass CMakeLists.txt catkin_install_python ( PROGRAMS scripts/run.py scripts/talker.py scripts/listener.py DESTINATION ${ CATKIN_PACKAGE_BIN_DESTINATION } ) \u4e0a\u4f20\u4ee3\u7801 scp ~/catkin_ws/src/lib omove@ $ip :~/omve_ws/src \u8fde\u63a5\u63a7\u5236\u5668\u7136\u540e\u7f16\u8bd1 ssh omove@ $ip cd ~/omove_ws catkin_make \u542f\u52a8\u9a71\u52a8\u8282\u70b9 roslaunch omove_driver omove_driver.launch \u8fd0\u884c\u7a0b\u5e8f rosrun lab run.py","title":"\u5b9e\u9a8c\u4e8c"},{"location":"lab2/#ros","text":"mkdir -p ~/catkin_ws/src #\u521b\u5efa\u5de5\u4f5c\u7a7a\u95f4catkin_ws\u548c\u5b50\u76ee\u5f55src\uff0c\u81ea\u5b9a\u4e49\u7a7a\u95f4\u540d cd ~/catkin_ws #\u8fdb\u5165\u5230\u5de5\u4f5c\u7a7a\u95f4catkin_ws catkin_make #\u7f16\u8bd1\u5de5\u4f5c\u7a7a\u95f4catkin_ws","title":"ROS\u5de5\u4f5c\u7a7a\u95f4\u4e0e\u73af\u5883\u7ba1\u7406"},{"location":"lab2/#ros_1","text":"cd ~/catkin_ws/src #\u8fdb\u5165\u7a0b\u5e8f\u5305\u76ee\u5f55 catkin_create_pkg lab std_msgs rospy roscpp #\u521b\u5efa\u7a0b\u5e8f\u5305lab cd lab #\u8fdb\u5165\u7a0b\u5e8f\u5305lab","title":"ROS\u7a0b\u5e8f\u5305\u521b\u5efa"},{"location":"lab2/#ros_2","text":"mkdir scripts touch scripts/talker.py scripts/listener.py # \u521b\u5efa\u7a7a\u767d\u6587\u4ef6 chmod +x scripts/talker.py scripts/listener.py # \u6dfb\u52a0\u6267\u884c\u6743\u9650 \u7f16\u8f91 scripts/talker.py gedit scripts/talker.py scripts/talker.py #!/usr/bin/env python # license removed for brevity import rospy from std_msgs.msg import String def talker (): pub = rospy . Publisher ( 'chatter' , String , queue_size = 10 ) rospy . init_node ( 'talker' , anonymous = True ) rate = rospy . Rate ( 10 ) # 10hz while not rospy . is_shutdown (): hello_str = \"hello world %s \" % rospy . get_time () rospy . loginfo ( hello_str ) pub . publish ( hello_str ) rate . sleep () if __name__ == '__main__' : try : talker () except rospy . ROSInterruptException : pass \u7f16\u8f91 scripts/listener.py gedit scripts/listener.py scripts/listener.py #!/usr/bin/env python import rospy from std_msgs.msg import String def callback ( data ): rospy . loginfo ( rospy . get_caller_id () + \"I heard %s \" , data . data ) def listener (): # In ROS, nodes are uniquely named. If two nodes with the same # name are launched, the previous one is kicked off. The # anonymous=True flag means that rospy will choose a unique # name for our 'listener' node so that multiple listeners can # run simultaneously. rospy . init_node ( 'listener' , anonymous = True ) rospy . Subscriber ( \"chatter\" , String , callback ) # spin() simply keeps python from exiting until this node is stopped rospy . spin () if __name__ == '__main__' : listener () \u7f16\u8f91 CMakeLists.txt gedit CMakeLists.txt \u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 CMakeLists.txt catkin_install_python ( PROGRAMS scripts/talker.py scripts/listener.py DESTINATION ${ CATKIN_PACKAGE_BIN_DESTINATION } ) \u7f16\u8bd1\u5de5\u7a0b cd ~/catkin_ws catkin_make \u52a0\u8f7d\u73af\u5883 source devel/setup.bash \u8fd0\u884c\u4e3b\u8282\u70b9 roscore \u8fd0\u884c\u8ba2\u9605\u8005 cd ~/catkin_ws source devel/setup.bash rosrun lab listener.py \u8fd0\u884c\u53d1\u5e03\u8005 cd ~/catkin_ws source devel/setup.bash rosrun lab talker.py","title":"ROS\u7f16\u7a0b\u8bdd\u9898\u53d1\u5e03\u4e0e\u8ba2\u9605\u7684\u4ee3\u7801\u548c\u5206\u6790"},{"location":"lab2/#omove","text":"touch scripts/run.py chmod +x scripts/run.py scripts/run.py #!/usr/bin/env python # -*- coding: utf-8 -*- import rospy from geometry_msgs.msg import Twist def run (): pub = rospy . Publisher ( 'cmd_vel' , Twist , queue_size = 10 ) rospy . init_node ( 'run' , anonymous = True ) rate = rospy . Rate ( 10 ) # 10hz count = 0 while not rospy . is_shutdown (): twist = Twist () if 0 == count : rospy . loginfo ( \"\u524d\u8fdb\" ) elif 20 == count : rospy . loginfo ( \"\u5de6\u79fb\" ) elif 40 == count : rospy . loginfo ( \"\u540e\u9000\" ) elif 60 == count : rospy . loginfo ( \"\u53f3\u79fb\" ) if count <= 20 : twist . linear . x = 1 elif 20 < count and count <= 40 : twist . linear . y = 1 elif 40 < count and count <= 60 : twist . linear . x = - 1 elif 60 < count and count <= 80 : twist . linear . y = - 1 else : count = - 1 pub . publish ( twist ) rate . sleep () count += 1 if __name__ == '__main__' : try : run () except rospy . ROSInterruptException : pass CMakeLists.txt catkin_install_python ( PROGRAMS scripts/run.py scripts/talker.py scripts/listener.py DESTINATION ${ CATKIN_PACKAGE_BIN_DESTINATION } ) \u4e0a\u4f20\u4ee3\u7801 scp ~/catkin_ws/src/lib omove@ $ip :~/omve_ws/src \u8fde\u63a5\u63a7\u5236\u5668\u7136\u540e\u7f16\u8bd1 ssh omove@ $ip cd ~/omove_ws catkin_make \u542f\u52a8\u9a71\u52a8\u8282\u70b9 roslaunch omove_driver omove_driver.launch \u8fd0\u884c\u7a0b\u5e8f rosrun lab run.py","title":"\u7f16\u7a0b\u63a7\u5236omove\u79fb\u52a8\u673a\u5668\u4eba\u81ea\u4e3b\u8fd0\u52a8"},{"location":"lab3/","text":"\u7b14\u8bb0\u672c\u6444\u50cf\u5934\u548comove\u79fb\u52a8\u673a\u5668\u4eba\u89c6\u89c9\u83b7\u53d6\u56fe\u50cf\u6b65\u9aa4\u548c\u622a\u56fe \u00b6 \u88c5usb_cam\u7a0b\u5e8f\u5305 sudo apt-get install ros-melodic-usb-cam \u542f\u52a8\u6d4b\u8bd5\u6587\u4ef6\uff0c\u9a71\u52a8\u7b14\u8bb0\u672c\u7535\u8111\u6444\u50cf\u5934 Note \u542f\u52a8\u524d\uff0c\u8bf7\u68c0\u67e5\u53f3\u4e0b\u89d2\u7535\u8111\u7684\u6444\u50cf\u5934\u662f\u5426\u4e0e\u865a\u62df\u673a\u8fde\u63a5 roslaunch usb_cam usb_cam-test.launch Note \u5982\u679c\u6444\u50cf\u5934\u6253\u5f00\u540e\u53c8\u5173\u95ed\uff0c\u8bf7\u5c1d\u8bd5\u5c06\u865a\u62df\u673a\u7684USB\u517c\u5bb9\u6027\u4e3a 3.0 \u542f\u52a8omove\u6df1\u5ea6\u89c6\u89c9\u9a71\u52a8\u6587\u4ef6 roslaunch realsense2_camera rs_camera.launch \u901a\u8fc7rqt\u5de5\u5177\u83b7\u53d6\u56fe\u50cf rosrun rqt_image_view rqt_image_view \u67e5\u770b\u56fe\u50cf\u6d88\u606f\u683c\u5f0f rosrun rqt_msg rqt_msg \u6fc0\u5149\u96f7\u8fbe\u6d88\u606f\u83b7\u53d6 \u00b6 \u542f\u52a8omove\u6fc0\u5149\u96f7\u8fbe\u548comove\u5c0f\u8f66\u9a71\u52a8\u6587\u4ef6 roslaunch omove_driver omove_driver_rplidar.launch \u67e5\u770b\u6fc0\u5149\u96f7\u8fbe\u6d88\u606f\u683c\u5f0f rosrun rqt_msg rqt_msg omove\u79fb\u52a8\u673a\u5668\u4eba\u89c6\u89c9\u4f20\u611f\u5668\u3001\u6fc0\u5149\u96f7\u8fbe\u548cIMU\u6d88\u606f\u683c\u5f0f\u67e5\u770b \u00b6 rosmsg show sensor_msgs/Image rosmsg show sensor_msgs/LaserScan rosmsg show sensor_msgs/Imu ROS\u56fe\u50cf\u548copencv\u56fe\u50cf\u7684\u8f6c\u6362\u539f\u7406\u3001\u65b9\u6cd5 \u00b6 ROS\u56fe\u50cf\u8f6c\u6362\u4e3aopencv\u56fe\u50cf cv_image = bridge . imgmsg_to_cv2 ( image_message , desired_encoding = \"passthrough\" ) opencv\u56fe\u50cf\u8f6c\u6362ROS\u56fe\u50cf cv_image = cv2_to_imgmsg ( cv_image , encoding = \"passthrough\" )","title":"\u5b9e\u9a8c\u4e09"},{"location":"lab3/#omove","text":"\u88c5usb_cam\u7a0b\u5e8f\u5305 sudo apt-get install ros-melodic-usb-cam \u542f\u52a8\u6d4b\u8bd5\u6587\u4ef6\uff0c\u9a71\u52a8\u7b14\u8bb0\u672c\u7535\u8111\u6444\u50cf\u5934 Note \u542f\u52a8\u524d\uff0c\u8bf7\u68c0\u67e5\u53f3\u4e0b\u89d2\u7535\u8111\u7684\u6444\u50cf\u5934\u662f\u5426\u4e0e\u865a\u62df\u673a\u8fde\u63a5 roslaunch usb_cam usb_cam-test.launch Note \u5982\u679c\u6444\u50cf\u5934\u6253\u5f00\u540e\u53c8\u5173\u95ed\uff0c\u8bf7\u5c1d\u8bd5\u5c06\u865a\u62df\u673a\u7684USB\u517c\u5bb9\u6027\u4e3a 3.0 \u542f\u52a8omove\u6df1\u5ea6\u89c6\u89c9\u9a71\u52a8\u6587\u4ef6 roslaunch realsense2_camera rs_camera.launch \u901a\u8fc7rqt\u5de5\u5177\u83b7\u53d6\u56fe\u50cf rosrun rqt_image_view rqt_image_view \u67e5\u770b\u56fe\u50cf\u6d88\u606f\u683c\u5f0f rosrun rqt_msg rqt_msg","title":"\u7b14\u8bb0\u672c\u6444\u50cf\u5934\u548comove\u79fb\u52a8\u673a\u5668\u4eba\u89c6\u89c9\u83b7\u53d6\u56fe\u50cf\u6b65\u9aa4\u548c\u622a\u56fe"},{"location":"lab3/#_1","text":"\u542f\u52a8omove\u6fc0\u5149\u96f7\u8fbe\u548comove\u5c0f\u8f66\u9a71\u52a8\u6587\u4ef6 roslaunch omove_driver omove_driver_rplidar.launch \u67e5\u770b\u6fc0\u5149\u96f7\u8fbe\u6d88\u606f\u683c\u5f0f rosrun rqt_msg rqt_msg","title":"\u6fc0\u5149\u96f7\u8fbe\u6d88\u606f\u83b7\u53d6"},{"location":"lab3/#omoveimu","text":"rosmsg show sensor_msgs/Image rosmsg show sensor_msgs/LaserScan rosmsg show sensor_msgs/Imu","title":"omove\u79fb\u52a8\u673a\u5668\u4eba\u89c6\u89c9\u4f20\u611f\u5668\u3001\u6fc0\u5149\u96f7\u8fbe\u548cIMU\u6d88\u606f\u683c\u5f0f\u67e5\u770b"},{"location":"lab3/#rosopencv","text":"ROS\u56fe\u50cf\u8f6c\u6362\u4e3aopencv\u56fe\u50cf cv_image = bridge . imgmsg_to_cv2 ( image_message , desired_encoding = \"passthrough\" ) opencv\u56fe\u50cf\u8f6c\u6362ROS\u56fe\u50cf cv_image = cv2_to_imgmsg ( cv_image , encoding = \"passthrough\" )","title":"ROS\u56fe\u50cf\u548copencv\u56fe\u50cf\u7684\u8f6c\u6362\u539f\u7406\u3001\u65b9\u6cd5"},{"location":"lab4/","text":"roslaunch realsense2_camera rs_camera.launch \u989c\u8272\u8bc6\u522b \u00b6 scripts/ros-opencv-color.py #!/usr/bin/env python import rospy import cv2 import numpy as np from cv_bridge import CvBridge , CvBridgeError from sensor_msgs.msg import Image class rosopencvcolor (): def __init__ ( self ): rospy . init_node ( 'ros_opencv_color' ) self . cv_bridge = CvBridge () rospy . Subscriber ( '/camera/color/image_raw' , Image , self . color_img_cb ) self . lane_img_pub = rospy . Publisher ( '/lane_image' , Image , queue_size = 5 ) def color_img_cb ( self , data ): try : cv_img = self . cv_bridge . imgmsg_to_cv2 ( data , 'bgr8' ) except CvBridgeError as e : print e height , width , channels = cv_img . shape lower = np . array ([ 0 , 0 , 140 ], dtype = \"uint8\" ) upper = np . array ([ 255 , 255 , 255 ], dtype = \"uint8\" ) mask = cv2 . inRange ( cv_img , lower , upper ) extraction = cv2 . bitwise_and ( cv_img , cv_img , mask = mask ) if not rospy . is_shutdown (): self . lane_img_pub . publish ( self . cv_bridge . cv2_to_imgmsg ( np . hstack ([ cv_img , extraction ]), \"bgr8\" )) cv2 . imshow ( \"Image window\" , np . hstack ([ cv_img , extraction ])) cv2 . imshow ( 'test' , cv_img ) cv2 . waitKey ( 1 ) if __name__ == '__main__' : rosopencvcolor () rospy . spin () cv2 . destroyAllWindows () \u8f6e\u5ed3\u8bc6\u522b \u00b6 scripts/ros-opencv-findcontours.py #!/usr/bin/env python import os import math import rospy import cv2 import numpy as np from cv_bridge import CvBridge , CvBridgeError from sensor_msgs.msg import Image class rosopencvfindcontours (): def __init__ ( self ): rospy . init_node ( 'ros_opencv_findcontours' ) self . cv_bridge = CvBridge () rospy . Subscriber ( '/camera/color/image_raw' , Image , self . color_img_cb ) self . lane_img_pub = rospy . Publisher ( '/lane_image_findcontours' , Image , queue_size = 5 ) def color_img_cb ( self , data ): try : cv_img = self . cv_bridge . imgmsg_to_cv2 ( data , 'bgr8' ) except CvBridgeError as e : print e ret , thresh = cv2 . threshold ( cv2 . cvtColor ( cv2 . GaussianBlur ( cv_img , ( 5 , 5 ), 0 ), cv2 . COLOR_BGR2GRAY ), 127 , 255 , cv2 . THRESH_BINARY ) img_ , contours , hierarchy = cv2 . findContours ( thresh , cv2 . RETR_LIST , cv2 . CHAIN_APPROX_SIMPLE ) cv2 . drawContours ( cv_img , contours , - 1 , ( 255 , 120 , 0 ), 3 ) cv2 . imshow ( 'Image' , np . hstack (( cv2 . cvtColor ( thresh , cv2 . COLOR_GRAY2BGR ), cv_img ))) cv2 . waitKey ( 1 ) if __name__ == '__main__' : rosopencvfindcontours () rospy . spin () cv2 . destroyAllWindows ()","title":"\u5b9e\u9a8c\u56db"},{"location":"lab4/#_1","text":"scripts/ros-opencv-color.py #!/usr/bin/env python import rospy import cv2 import numpy as np from cv_bridge import CvBridge , CvBridgeError from sensor_msgs.msg import Image class rosopencvcolor (): def __init__ ( self ): rospy . init_node ( 'ros_opencv_color' ) self . cv_bridge = CvBridge () rospy . Subscriber ( '/camera/color/image_raw' , Image , self . color_img_cb ) self . lane_img_pub = rospy . Publisher ( '/lane_image' , Image , queue_size = 5 ) def color_img_cb ( self , data ): try : cv_img = self . cv_bridge . imgmsg_to_cv2 ( data , 'bgr8' ) except CvBridgeError as e : print e height , width , channels = cv_img . shape lower = np . array ([ 0 , 0 , 140 ], dtype = \"uint8\" ) upper = np . array ([ 255 , 255 , 255 ], dtype = \"uint8\" ) mask = cv2 . inRange ( cv_img , lower , upper ) extraction = cv2 . bitwise_and ( cv_img , cv_img , mask = mask ) if not rospy . is_shutdown (): self . lane_img_pub . publish ( self . cv_bridge . cv2_to_imgmsg ( np . hstack ([ cv_img , extraction ]), \"bgr8\" )) cv2 . imshow ( \"Image window\" , np . hstack ([ cv_img , extraction ])) cv2 . imshow ( 'test' , cv_img ) cv2 . waitKey ( 1 ) if __name__ == '__main__' : rosopencvcolor () rospy . spin () cv2 . destroyAllWindows ()","title":"\u989c\u8272\u8bc6\u522b"},{"location":"lab4/#_2","text":"scripts/ros-opencv-findcontours.py #!/usr/bin/env python import os import math import rospy import cv2 import numpy as np from cv_bridge import CvBridge , CvBridgeError from sensor_msgs.msg import Image class rosopencvfindcontours (): def __init__ ( self ): rospy . init_node ( 'ros_opencv_findcontours' ) self . cv_bridge = CvBridge () rospy . Subscriber ( '/camera/color/image_raw' , Image , self . color_img_cb ) self . lane_img_pub = rospy . Publisher ( '/lane_image_findcontours' , Image , queue_size = 5 ) def color_img_cb ( self , data ): try : cv_img = self . cv_bridge . imgmsg_to_cv2 ( data , 'bgr8' ) except CvBridgeError as e : print e ret , thresh = cv2 . threshold ( cv2 . cvtColor ( cv2 . GaussianBlur ( cv_img , ( 5 , 5 ), 0 ), cv2 . COLOR_BGR2GRAY ), 127 , 255 , cv2 . THRESH_BINARY ) img_ , contours , hierarchy = cv2 . findContours ( thresh , cv2 . RETR_LIST , cv2 . CHAIN_APPROX_SIMPLE ) cv2 . drawContours ( cv_img , contours , - 1 , ( 255 , 120 , 0 ), 3 ) cv2 . imshow ( 'Image' , np . hstack (( cv2 . cvtColor ( thresh , cv2 . COLOR_GRAY2BGR ), cv_img ))) cv2 . waitKey ( 1 ) if __name__ == '__main__' : rosopencvfindcontours () rospy . spin () cv2 . destroyAllWindows ()","title":"\u8f6e\u5ed3\u8bc6\u522b"},{"location":"lab5/","text":"\u5b89\u88c5gazebo\uff08\u5982\u5b89\u88c5\u5b8c\u6574\u7248ROS\u7cfb\u7edf\uff0c\u5219\u5df2\u7ecf\u5b89\u88c5gazebo\uff0c\u53ef\u8df3\u8fc7\u6b64\u6b65\uff09 sudo apt-get update sudo apt-get install ros-melodic-gazebo* gazebo\u4eff\u771f\u73af\u5883\u521b\u5efa \u00b6 \u83dc\u5355\u680f\u9009\u62e9Edit\uff08\u7f16\u8f91\uff09>Building Editor\uff08\u6a21\u62df\u5efa\u7b51\u7269\u7f16\u8f91\u5668\uff09\uff0c\u6216\u4f7f\u7528\u5feb\u6377\u952eCtrl+B\u6253\u5f00\u73af\u5883\u7f16\u8f91\u5668 \u9009\u62e9\u8c03\u8272\u677f\u533a\u57dfWall\uff08\u5899\u58c1\uff09\uff0c\u5728\u754c\u9762\u53f3\u4e0a\u4fa7\u4e8c\u7ef4\u89c6\u56fe\u533a\u57df\u5355\u51fb\u9f20\u6807\u5de6\u952e\u5f00\u59cb\u7ed8\u5236\u5899\u58c1\uff0c\u79fb\u52a8\u9f20\u6807\u53ef\u4ee5\u62d6\u52a8\u5899\u58c1\uff0c\u4f1a\u4ee5\u6a59\u8272\u9ad8\u91cf\u663e\u793a\u5899\u58c1\u548c\u5176\u957f\u5ea6\uff0c\u518d\u6b21\u5355\u51fb\u9f20\u6807\u5de6\u952e\u786e\u8ba4\u5899\u58c1\u7684\u7ec8\u70b9\u3002\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u79fb\u52a8\u9f20\u6807\u4ee5\u4e0a\u4e00\u9762\u5899\u58c1\u7684\u7ec8\u70b9\u5f00\u59cb\u7ed8\u5236\u4e0b\u4e00\u9762\u5899\u58c1\uff0c\u4e5f\u53ef\u4ee5\u5355\u51fb\u9f20\u6807\u53f3\u952e\u7ed3\u675f\u6b64\u9762\u5899\u58c1\u7684\u7ed8\u5236\u3002 \u4ee5\u76f8\u540c\u7684\u65b9\u6cd5\u7ed8\u5236\u4e00\u4e2a\u5c01\u95ed\u4eff\u771f\u73af\u5883\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u4ee5\u5bf9\u5899\u58c1\u8fdb\u884c\u7f16\u8f91\u548c\u8c03\u6574\uff0c\u9f20\u6807\u5de6\u952e\u53cc\u51fb\u9700\u8981\u7f16\u8f91\u7684\u5899\u58c1\u53ef\u4ee5\u5f39\u51fa\u68c0\u67e5\u5668\uff0c\u5728\u68c0\u67e5\u5668\u4e2d\u53ef\u4ee5\u5bf9\u5899\u58c1\u7684\u4f4d\u7f6e\u3001\u957f\u5ea6\u3001\u539a\u5ea6\u548c\u9ad8\u5ea6\u7b49\u53c2\u6570\u8fdb\u884c\u7f16\u8f91\u3002\u8fd9\u91cc\u5c06\u5916\u5899\u957f\u5ea6\u8bbe\u7f6e\u4e3a4m\uff0c\u5185\u5916\u5899\u9ad8\u5ea6\u90fd\u8bbe\u7f6e\u4e3a1m\uff0c\u539a\u5ea6\u9ed8\u8ba4\u4e3a0.15m\u3002 \u7ed9\u5899\u58c1\u6dfb\u52a0\u6750\u8d28\u548c\u7eb9\u7406\u7279\u5f81\uff0c\u9009\u62e9\u8c03\u8272\u677f\u533a\u57df\u4e0b\u65b9Add Texture\uff08\u6dfb\u52a0\u8d28\u5730\uff09\u4e2d\u7684Bricks\uff08\u7816\uff09\u9009\u9879\uff0c\u7136\u540e\u9f20\u6807\u5de6\u952e\u5355\u51fb\u4e09\u7ef4\u89c6\u56fe\u533a\u57df\u7684\u5916\u5899\uff0c\u5373\u53ef\u4ee5\u4e3a\u5916\u5899\u6dfb\u52a0\u7816\u7684\u7eb9\u7406\u548c\u8d28\u5730\u3002 \u5728\u83dc\u5355\u680f\u9009\u62e9File\uff08\u6587\u4ef6\uff09>Save As\uff08\u53e6\u5b58\u4e3a\uff09\uff0c\u53e6\u5b58\u5f53\u524d\u7f16\u8f91\u597d\u7684\u4eff\u771f\u73af\u5883\u6587\u4ef6\uff0c\u9009\u62e9\u4e00\u4e2a\u4fdd\u5b58\u8def\u5f84\u5e76\u53d6\u540d\u4e3a my_building \uff08\u53ef\u81ea\u5b9a\u4e49\u540d\u79f0\uff09\uff0c\u4fdd\u5b58\u5b8c\u6210\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e00\u4e2a\u540d\u4e3a my_building \u7684\u6587\u4ef6\u5939\uff0c\u5305\u542b model.config \u548c model.sdf \u4e24\u4e2a\u6587\u4ef6\u3002 \u65b0\u5efa\u4e00\u4e2a\u73af\u5883\uff0c\u5bfc\u5165\u4e4b\u524d\u6240\u521b\u5efa\u7684\u5efa\u7b51\u7269\uff0c\u5b9a\u597d\u539f\u70b9\uff0c\u4fdd\u5b58\u4e3a my_world.sdf Note \u5c06 my_building \u6587\u4ef6\u5939\u590d\u5236\u5230\u7528\u6237home\u76ee\u5f55\u7684 .gazebo/models \u8def\u5f84\u4e0b\uff0c\u7528\u6237\u5373\u53ef\u5728Gazebo\u754c\u9762\u7684\u9762\u677fInsert\u9009\u9879\u5361\u4e2d\u770b\u5230\u6b64\u6a21\u578b\u6587\u4ef6\uff0c\u53ef\u76f4\u63a5\u9009\u4e2d\u63d2\u5165\u5230\u573a\u666f\u7a97\u53e3\u4e2d\u3002 Turtlebot3 Burger\u673a\u5668\u4eba\u8fd0\u52a8\u4eff\u771f \u00b6 \u5b89\u88c5\u4f9d\u8d56\u5305 sudo apt-get install -y ros-melodic-joy ros-melodic-teleop-twist-joy ros-melodic-teleop-twist-keyboard ros-melodic-laser-proc ros-melodic-rgbd-launch ros-melodic-depthimage-to-laserscan ros-melodic-rosserial-arduino ros-melodic-rosserial-python ros-melodic-rosserial-server ros-melodic-rosserial-client ros-melodic-rosserial-msgs ros-melodic-amcl ros-melodic-map-server ros-melodic-move-base ros-melodic-urdf ros-melodic-xacro ros-melodic-compressed-image-transport ros-melodic-rqt-image-view ros-melodic-gmapping ros-melodic-navigation ros-melodic-interactive-markers \u521b\u5efaROS\u5de5\u4f5c\u7a7a\u95f4\u5e76\u4e0b\u8f7dTurtlebot\u79fb\u52a8\u673a\u5668\u4eba\u8f6f\u4ef6\u5305 mkdir -p ~/turtlebot_ws/src && cd ~/turtlebot_ws/src git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3_msgs.git git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3.git git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3_simulations.git cd ~/turtlebot_ws && catkin_make \u8fd0\u884c\u4eff\u771f\u529f\u80fd\u5305\u5e76\u89c2\u5bdf\u6548\u679c cd ~/turtlebot_ws source devel/setup.bash export TURTLEBOT3_MODEL = burger #\u9009\u62e9\u5bfc\u5165burger model roslaunch turtlebot3_gazebo turtlebot3_world.launch \u952e\u76d8\u63a7\u5236\u4eff\u771f\u73af\u5883\u4e2d\u7684\u673a\u5668\u4eba\u8fd0\u52a8 source devel/setup.bash export TURTLEBOT3_MODEL = burger rosrun turtlebot3_teleop turtlebot3_teleop_key \u4fee\u6539\u4eff\u771f\u73af\u5883\u6a21\u578b\u4e3a\u81ea\u5df1\u521b\u5efa\u7684\u4eff\u771f\u73af\u5883 \u5c06\u4e4b\u524d\u521b\u5efa\u7684 my_world.sdf \u6587\u4ef6\u590d\u5236\u5230 ~/turtlebot_ws/src/turtlebot3_simulations/turtlebot3_gazebo/worlds/ \u76ee\u5f55\u4e0b\uff0c\u6253\u5f00 ~/turtlebot_ws/src/turtlebot3_simulations/turtlebot3_gazebo/launch/turtlebot3_world.launch \u6587\u4ef6\uff0c\u5c06\u5176\u4e2d\u52a0\u8f7d\u4eff\u771f\u73af\u5883\u7684\u547d\u4ee4\u6539\u4e3a\uff1a <arg name= \"world_name\" value= \"$(find turtlebot3_gazebo)/worlds/my_world.sdf\" /> \u5728\u6b64\u6587\u4ef6\u4e2d\u4fee\u6539\u52a0\u8f7dTurtlebot3\u6a21\u578b\u5728\u4eff\u771f\u73af\u5883\u4e2d\u7684\u521d\u59cb\u4f4d\u7f6e\uff1a <arg name= \"x_pos\" default= \"0.0\" /> <arg name= \"y_pos\" default= \"0.0\" /> <arg name= \"z_pos\" default= \"0.0\" /> \u518d\u6b21\u8fd0\u884c\u4eff\u771f\u529f\u80fd\u5305\u5e76\u89c2\u5bdf\u6548\u679c source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_gazebo turtlebot3_world.launch Turtlebot3 Burger\u673a\u5668\u4eba\u5730\u56fe\u6784\u5efa\u548c\u81ea\u52a8\u5bfc\u822a\u8fc7\u7a0b \u00b6 \u4fdd\u6301\u4eff\u771f\u73af\u5883\u548c\u952e\u76d8\u63a7\u5236\u7a97\u53e3\u8fd0\u884c\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884cslam\u6587\u4ef6\uff1a source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_slam turtlebot3_slam.launch \u952e\u76d8\u63a7\u5236\u673a\u5668\u4eba\u5728\u73af\u5883\u4e2d\u8fd0\u52a8\uff0c\u521b\u5efa\u6ee1\u610f\u7684\u5730\u56fe\u540e\u7528\u547d\u4ee4\u4fdd\u5b58\u5730\u56fe\uff1a source devel/setup.bash rosrun map_server map_saver -f ~/turtlebot_ws/src/turtlebot3/turtlebot3_navigation/maps/my_map \u6253\u5f00 ~/turtlebot_ws/src/turtlebot3/turtlebot3_navigation/launch/turtlebot3_navigation.launch \u6587\u4ef6\uff0c\u5c06\u9700\u8981\u52a0\u8f7d\u7684\u5730\u56fe\u6539\u4e3a\u4e4b\u524d\u4fdd\u5b58\u7684\u5730\u56fe\uff1a <arg name= \"map_file\" default= \"$(find turtlebot3_navigation)/maps/my_map.yaml\" /> \u4fdd\u6301\u4eff\u771f\u73af\u5883\u8fd0\u884c\uff0c\u5173\u95ed\u5176\u4f59\u7a97\u53e3\u8fd0\u884c\u7684\u6587\u4ef6\uff0c\u8fd0\u884c\u81ea\u52a8\u5bfc\u822a\u6587\u4ef6\uff1a source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_navigation turtlebot3_navigation.launch \u9f20\u6807\u5de6\u952e\u9009\u62e9rviz\u5de5\u5177\u680f\u7684 2D Pose Estimate \u91cd\u5b9a\u4f4d\u4eff\u771f\u73af\u5883\u4e2d\u673a\u5668\u4eba\u4f4d\u7f6e\u548c\u5730\u56fe\u4e2d\u4e00\u81f4\uff0c\u7136\u540e\u9009\u62e9rviz\u5de5\u5177\u680f\u4e2d 2D Nav Goal \u9009\u9879\uff0c\u957f\u6309\u9f20\u6807\u5de6\u952e\u5728\u5730\u56fe\u4e0a\u4e3a\u673a\u5668\u4eba\u6307\u5b9a\u4e00\u4e2a\u5bfc\u822a\u76ee\u6807\u70b9\u3002\u677e\u5f00\u9f20\u6807\u540e\uff0c\u5728\u77ed\u65f6\u95f4\u5185\u89c4\u5212\u51fa\u4e86\u4e00\u6761\u6700\u4f18\u7684\u8def\u5f84\uff0c\u673a\u5668\u4eba\u5f00\u59cb\u5411\u76ee\u6807\u70b9\u8fd0\u52a8\u3002","title":"\u5b9e\u9a8c\u4e94"},{"location":"lab5/#gazebo","text":"\u83dc\u5355\u680f\u9009\u62e9Edit\uff08\u7f16\u8f91\uff09>Building Editor\uff08\u6a21\u62df\u5efa\u7b51\u7269\u7f16\u8f91\u5668\uff09\uff0c\u6216\u4f7f\u7528\u5feb\u6377\u952eCtrl+B\u6253\u5f00\u73af\u5883\u7f16\u8f91\u5668 \u9009\u62e9\u8c03\u8272\u677f\u533a\u57dfWall\uff08\u5899\u58c1\uff09\uff0c\u5728\u754c\u9762\u53f3\u4e0a\u4fa7\u4e8c\u7ef4\u89c6\u56fe\u533a\u57df\u5355\u51fb\u9f20\u6807\u5de6\u952e\u5f00\u59cb\u7ed8\u5236\u5899\u58c1\uff0c\u79fb\u52a8\u9f20\u6807\u53ef\u4ee5\u62d6\u52a8\u5899\u58c1\uff0c\u4f1a\u4ee5\u6a59\u8272\u9ad8\u91cf\u663e\u793a\u5899\u58c1\u548c\u5176\u957f\u5ea6\uff0c\u518d\u6b21\u5355\u51fb\u9f20\u6807\u5de6\u952e\u786e\u8ba4\u5899\u58c1\u7684\u7ec8\u70b9\u3002\u53ef\u4ee5\u9009\u62e9\u7ee7\u7eed\u79fb\u52a8\u9f20\u6807\u4ee5\u4e0a\u4e00\u9762\u5899\u58c1\u7684\u7ec8\u70b9\u5f00\u59cb\u7ed8\u5236\u4e0b\u4e00\u9762\u5899\u58c1\uff0c\u4e5f\u53ef\u4ee5\u5355\u51fb\u9f20\u6807\u53f3\u952e\u7ed3\u675f\u6b64\u9762\u5899\u58c1\u7684\u7ed8\u5236\u3002 \u4ee5\u76f8\u540c\u7684\u65b9\u6cd5\u7ed8\u5236\u4e00\u4e2a\u5c01\u95ed\u4eff\u771f\u73af\u5883\uff0c\u7ed8\u5236\u5b8c\u6210\u540e\u53ef\u4ee5\u5bf9\u5899\u58c1\u8fdb\u884c\u7f16\u8f91\u548c\u8c03\u6574\uff0c\u9f20\u6807\u5de6\u952e\u53cc\u51fb\u9700\u8981\u7f16\u8f91\u7684\u5899\u58c1\u53ef\u4ee5\u5f39\u51fa\u68c0\u67e5\u5668\uff0c\u5728\u68c0\u67e5\u5668\u4e2d\u53ef\u4ee5\u5bf9\u5899\u58c1\u7684\u4f4d\u7f6e\u3001\u957f\u5ea6\u3001\u539a\u5ea6\u548c\u9ad8\u5ea6\u7b49\u53c2\u6570\u8fdb\u884c\u7f16\u8f91\u3002\u8fd9\u91cc\u5c06\u5916\u5899\u957f\u5ea6\u8bbe\u7f6e\u4e3a4m\uff0c\u5185\u5916\u5899\u9ad8\u5ea6\u90fd\u8bbe\u7f6e\u4e3a1m\uff0c\u539a\u5ea6\u9ed8\u8ba4\u4e3a0.15m\u3002 \u7ed9\u5899\u58c1\u6dfb\u52a0\u6750\u8d28\u548c\u7eb9\u7406\u7279\u5f81\uff0c\u9009\u62e9\u8c03\u8272\u677f\u533a\u57df\u4e0b\u65b9Add Texture\uff08\u6dfb\u52a0\u8d28\u5730\uff09\u4e2d\u7684Bricks\uff08\u7816\uff09\u9009\u9879\uff0c\u7136\u540e\u9f20\u6807\u5de6\u952e\u5355\u51fb\u4e09\u7ef4\u89c6\u56fe\u533a\u57df\u7684\u5916\u5899\uff0c\u5373\u53ef\u4ee5\u4e3a\u5916\u5899\u6dfb\u52a0\u7816\u7684\u7eb9\u7406\u548c\u8d28\u5730\u3002 \u5728\u83dc\u5355\u680f\u9009\u62e9File\uff08\u6587\u4ef6\uff09>Save As\uff08\u53e6\u5b58\u4e3a\uff09\uff0c\u53e6\u5b58\u5f53\u524d\u7f16\u8f91\u597d\u7684\u4eff\u771f\u73af\u5883\u6587\u4ef6\uff0c\u9009\u62e9\u4e00\u4e2a\u4fdd\u5b58\u8def\u5f84\u5e76\u53d6\u540d\u4e3a my_building \uff08\u53ef\u81ea\u5b9a\u4e49\u540d\u79f0\uff09\uff0c\u4fdd\u5b58\u5b8c\u6210\u4e4b\u540e\u53ef\u4ee5\u770b\u5230\u751f\u6210\u4e00\u4e2a\u540d\u4e3a my_building \u7684\u6587\u4ef6\u5939\uff0c\u5305\u542b model.config \u548c model.sdf \u4e24\u4e2a\u6587\u4ef6\u3002 \u65b0\u5efa\u4e00\u4e2a\u73af\u5883\uff0c\u5bfc\u5165\u4e4b\u524d\u6240\u521b\u5efa\u7684\u5efa\u7b51\u7269\uff0c\u5b9a\u597d\u539f\u70b9\uff0c\u4fdd\u5b58\u4e3a my_world.sdf Note \u5c06 my_building \u6587\u4ef6\u5939\u590d\u5236\u5230\u7528\u6237home\u76ee\u5f55\u7684 .gazebo/models \u8def\u5f84\u4e0b\uff0c\u7528\u6237\u5373\u53ef\u5728Gazebo\u754c\u9762\u7684\u9762\u677fInsert\u9009\u9879\u5361\u4e2d\u770b\u5230\u6b64\u6a21\u578b\u6587\u4ef6\uff0c\u53ef\u76f4\u63a5\u9009\u4e2d\u63d2\u5165\u5230\u573a\u666f\u7a97\u53e3\u4e2d\u3002","title":"gazebo\u4eff\u771f\u73af\u5883\u521b\u5efa"},{"location":"lab5/#turtlebot3-burger","text":"\u5b89\u88c5\u4f9d\u8d56\u5305 sudo apt-get install -y ros-melodic-joy ros-melodic-teleop-twist-joy ros-melodic-teleop-twist-keyboard ros-melodic-laser-proc ros-melodic-rgbd-launch ros-melodic-depthimage-to-laserscan ros-melodic-rosserial-arduino ros-melodic-rosserial-python ros-melodic-rosserial-server ros-melodic-rosserial-client ros-melodic-rosserial-msgs ros-melodic-amcl ros-melodic-map-server ros-melodic-move-base ros-melodic-urdf ros-melodic-xacro ros-melodic-compressed-image-transport ros-melodic-rqt-image-view ros-melodic-gmapping ros-melodic-navigation ros-melodic-interactive-markers \u521b\u5efaROS\u5de5\u4f5c\u7a7a\u95f4\u5e76\u4e0b\u8f7dTurtlebot\u79fb\u52a8\u673a\u5668\u4eba\u8f6f\u4ef6\u5305 mkdir -p ~/turtlebot_ws/src && cd ~/turtlebot_ws/src git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3_msgs.git git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3.git git clone https://hub.fastgit.org/ROBOTIS-GIT/turtlebot3_simulations.git cd ~/turtlebot_ws && catkin_make \u8fd0\u884c\u4eff\u771f\u529f\u80fd\u5305\u5e76\u89c2\u5bdf\u6548\u679c cd ~/turtlebot_ws source devel/setup.bash export TURTLEBOT3_MODEL = burger #\u9009\u62e9\u5bfc\u5165burger model roslaunch turtlebot3_gazebo turtlebot3_world.launch \u952e\u76d8\u63a7\u5236\u4eff\u771f\u73af\u5883\u4e2d\u7684\u673a\u5668\u4eba\u8fd0\u52a8 source devel/setup.bash export TURTLEBOT3_MODEL = burger rosrun turtlebot3_teleop turtlebot3_teleop_key \u4fee\u6539\u4eff\u771f\u73af\u5883\u6a21\u578b\u4e3a\u81ea\u5df1\u521b\u5efa\u7684\u4eff\u771f\u73af\u5883 \u5c06\u4e4b\u524d\u521b\u5efa\u7684 my_world.sdf \u6587\u4ef6\u590d\u5236\u5230 ~/turtlebot_ws/src/turtlebot3_simulations/turtlebot3_gazebo/worlds/ \u76ee\u5f55\u4e0b\uff0c\u6253\u5f00 ~/turtlebot_ws/src/turtlebot3_simulations/turtlebot3_gazebo/launch/turtlebot3_world.launch \u6587\u4ef6\uff0c\u5c06\u5176\u4e2d\u52a0\u8f7d\u4eff\u771f\u73af\u5883\u7684\u547d\u4ee4\u6539\u4e3a\uff1a <arg name= \"world_name\" value= \"$(find turtlebot3_gazebo)/worlds/my_world.sdf\" /> \u5728\u6b64\u6587\u4ef6\u4e2d\u4fee\u6539\u52a0\u8f7dTurtlebot3\u6a21\u578b\u5728\u4eff\u771f\u73af\u5883\u4e2d\u7684\u521d\u59cb\u4f4d\u7f6e\uff1a <arg name= \"x_pos\" default= \"0.0\" /> <arg name= \"y_pos\" default= \"0.0\" /> <arg name= \"z_pos\" default= \"0.0\" /> \u518d\u6b21\u8fd0\u884c\u4eff\u771f\u529f\u80fd\u5305\u5e76\u89c2\u5bdf\u6548\u679c source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_gazebo turtlebot3_world.launch","title":"Turtlebot3 Burger\u673a\u5668\u4eba\u8fd0\u52a8\u4eff\u771f"},{"location":"lab5/#turtlebot3-burger_1","text":"\u4fdd\u6301\u4eff\u771f\u73af\u5883\u548c\u952e\u76d8\u63a7\u5236\u7a97\u53e3\u8fd0\u884c\uff0c\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u7ec8\u7aef\u7a97\u53e3\u8fd0\u884cslam\u6587\u4ef6\uff1a source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_slam turtlebot3_slam.launch \u952e\u76d8\u63a7\u5236\u673a\u5668\u4eba\u5728\u73af\u5883\u4e2d\u8fd0\u52a8\uff0c\u521b\u5efa\u6ee1\u610f\u7684\u5730\u56fe\u540e\u7528\u547d\u4ee4\u4fdd\u5b58\u5730\u56fe\uff1a source devel/setup.bash rosrun map_server map_saver -f ~/turtlebot_ws/src/turtlebot3/turtlebot3_navigation/maps/my_map \u6253\u5f00 ~/turtlebot_ws/src/turtlebot3/turtlebot3_navigation/launch/turtlebot3_navigation.launch \u6587\u4ef6\uff0c\u5c06\u9700\u8981\u52a0\u8f7d\u7684\u5730\u56fe\u6539\u4e3a\u4e4b\u524d\u4fdd\u5b58\u7684\u5730\u56fe\uff1a <arg name= \"map_file\" default= \"$(find turtlebot3_navigation)/maps/my_map.yaml\" /> \u4fdd\u6301\u4eff\u771f\u73af\u5883\u8fd0\u884c\uff0c\u5173\u95ed\u5176\u4f59\u7a97\u53e3\u8fd0\u884c\u7684\u6587\u4ef6\uff0c\u8fd0\u884c\u81ea\u52a8\u5bfc\u822a\u6587\u4ef6\uff1a source devel/setup.bash export TURTLEBOT3_MODEL = burger roslaunch turtlebot3_navigation turtlebot3_navigation.launch \u9f20\u6807\u5de6\u952e\u9009\u62e9rviz\u5de5\u5177\u680f\u7684 2D Pose Estimate \u91cd\u5b9a\u4f4d\u4eff\u771f\u73af\u5883\u4e2d\u673a\u5668\u4eba\u4f4d\u7f6e\u548c\u5730\u56fe\u4e2d\u4e00\u81f4\uff0c\u7136\u540e\u9009\u62e9rviz\u5de5\u5177\u680f\u4e2d 2D Nav Goal \u9009\u9879\uff0c\u957f\u6309\u9f20\u6807\u5de6\u952e\u5728\u5730\u56fe\u4e0a\u4e3a\u673a\u5668\u4eba\u6307\u5b9a\u4e00\u4e2a\u5bfc\u822a\u76ee\u6807\u70b9\u3002\u677e\u5f00\u9f20\u6807\u540e\uff0c\u5728\u77ed\u65f6\u95f4\u5185\u89c4\u5212\u51fa\u4e86\u4e00\u6761\u6700\u4f18\u7684\u8def\u5f84\uff0c\u673a\u5668\u4eba\u5f00\u59cb\u5411\u76ee\u6807\u70b9\u8fd0\u52a8\u3002","title":"Turtlebot3 Burger\u673a\u5668\u4eba\u5730\u56fe\u6784\u5efa\u548c\u81ea\u52a8\u5bfc\u822a\u8fc7\u7a0b"},{"location":"lab6/","text":"","title":"\u5b9e\u9a8c\u516d"}]}